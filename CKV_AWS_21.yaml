AWSTemplateFormatVersion: '2010-09-09'
Resources:
  ArtifactBucket:
    Type: AWS::S3::Bucket
    DependsOn: LogsBucket
    DeletionPolicy: Retain
    Properties:
      AccessControl: Private
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              KMSMasterKeyID: !Ref 'ArtifactBucketEncryptionKey'
              SSEAlgorithm: aws:kms
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      VersioningConfiguration:
        Status: Suspended
      LoggingConfiguration:
        DestinationBucketName: !Ref 'LogsBucket'
        LogFilePrefix: /logs/ArtifactBucket/
  CustomerDataBucket:
    Type: AWS::S3::Bucket
    DependsOn: LogsBucket
    DeletionPolicy: Retain
    Properties:
      AccessControl: Private
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              KMSMasterKeyID: !Ref 'ArtifactBucketEncryptionKey'
              SSEAlgorithm: aws:kms
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      LoggingConfiguration:
        DestinationBucketName: !Ref 'LogsBucket'
        LogFilePrefix: /logs/ArtifactBucket/
  WebServerLaunchConfig:
    Type: AWS::AutoScaling::LaunchConfiguration
    Metadata:
      AWS::CloudFormation::Init:
        config:
          packages:
            apt:
              openjdk-8-jdk: []
              ntp: []
              ntpdate: []
              ufw: []
              unzip: []
              language-pack-en: []
              apt-listchanges: []
              debian-goodies: []
              needrestart: []
              apt-show-versions: []
              sysstat: []
              debsecan: []
              debsums: []
              fail2ban: []
          files:
            /etc/cfn/cfn-hup.conf:
              content: !Join
                - ''
                - - "[main]\n"
                  - stack=
                  - !Ref 'AWS::StackId'
                  - "\n"
                  - region=
                  - !Ref 'AWS::Region'
                  - "\n"
              mode: '000644'
              owner: root
              group: root
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Join
                - ''
                - - "[cfn-auto-reloader-hook]\n"
                  - "triggers=post.update\n"
                  - "path=Resources.WebServerLaunchConfig.Metadata.AWS::CloudFormation::Init\n"
                  - 'action=/opt/aws/bin/cfn-init -v '
                  - '         --stack '
                  - !Ref 'AWS::StackName'
                  - '         --resource WebServerLaunchConfig '
                  - '         --region '
                  - !Ref 'AWS::Region'
                  - "\n"
                  - "runas=root\n"
            /etc/cron.d/cloudwatch-monitor:
              content: !Join
                - ''
                - - "*/5 * * * * root /opt/aws-scripts-mon/mon-put-instance-data.pl\
                    \ --mem-util --mem-used --mem-avail --swap-util --swap-used --disk-space-util\
                    \ --disk-space-used --disk-space-avail --disk-path=/ --from-cron\n"
            /etc/awslogs.conf:
              content: !Join
                - ''
                - - '[general]'
                  - "\n"
                  - state_file = /var/awslogs/state/agent-state
                  - "\n"
                  - "\n"
                  - '[userdata]'
                  - "\n"
                  - datetime_format = %Y-%m-%d %H:%M:%S
                  - "\n"
                  - file = /var/log/user-data.log
                  - "\n"
                  - buffer_duration = 5000
                  - "\n"
                  - log_stream_name = {instance_id}-{hostname}-{ip_address}-userdata
                  - "\n"
                  - initial_position = start_of_file
                  - "\n"
                  - log_group_name = ec2awslogs
                  - "\n"
                  - "\n"
                  - '[auth]'
                  - "\n"
                  - datetime_format = %Y-%m-%d %H:%M:%S
                  - "\n"
                  - file = /var/log/auth.log
                  - "\n"
                  - buffer_duration = 5000
                  - "\n"
                  - log_stream_name = {instance_id}-{hostname}-{ip_address}-auth
                  - "\n"
                  - initial_position = start_of_file
                  - "\n"
                  - log_group_name = ec2awslogs
                  - "\n"
                  - "\n"
                  - '[syslog]'
                  - "\n"
                  - datetime_format = %Y-%m-%d %H:%M:%S
                  - "\n"
                  - file = /var/log/syslog
                  - "\n"
                  - buffer_duration = 5000
                  - "\n"
                  - log_stream_name = {instance_id}-{hostname}-{ip_address}-syslog
                  - "\n"
                  - initial_position = start_of_file
                  - "\n"
                  - log_group_name = ec2awslogs
                  - "\n"
                  - "\n"
                  - '[kern.log]'
                  - "\n"
                  - datetime_format = %Y-%m-%d %H:%M:%S
                  - "\n"
                  - file = /var/log/kern.log
                  - "\n"
                  - buffer_duration = 5000
                  - "\n"
                  - log_stream_name = {instance_id}-{hostname}-{ip_address}-kern.log
                  - "\n"
                  - initial_position = start_of_file
                  - "\n"
                  - log_group_name = ec2awslogs
                  - "\n"
                  - '[rkhunter.log]'
                  - "\n"
                  - datetime_format = %Y-%m-%d %H:%M:%S
                  - "\n"
                  - file = /var/log/rkhunter.log
                  - "\n"
                  - buffer_duration = 5000
                  - "\n"
                  - log_stream_name = {instance_id}-{hostname}-{ip_address}-rkhunter.log
                  - "\n"
                  - initial_position = start_of_file
                  - "\n"
                  - log_group_name = ec2awslogs
                  - "\n"
                  - '[lynis.log]'
                  - "\n"
                  - datetime_format = %Y-%m-%d %H:%M:%S
                  - "\n"
                  - file = /var/log/lynis.log
                  - "\n"
                  - buffer_duration = 5000
                  - "\n"
                  - log_stream_name = {instance_id}-{hostname}-{ip_address}-lynis.log
                  - "\n"
                  - initial_position = start_of_file
                  - "\n"
                  - log_group_name = ec2awslogs
                  - "\n"
                  - '[ciaapp.log]'
                  - "\n"
                  - datetime_format = %Y-%m-%d %H:%M:%S
                  - "\n"
                  - file = /opt/cia/logs/*.log
                  - "\n"
                  - buffer_duration = 5000
                  - "\n"
                  - log_stream_name = {instance_id}-{hostname}-{ip_address}-ciaapp.log
                  - "\n"
                  - initial_position = start_of_file
                  - "\n"
                  - log_group_name = ec2awslogs
                  - "\n"
              mode: '000644'
              owner: root
              group: root
          services: {}
    Properties:
      ImageId: !Ref 'WebServerAmi'
      IamInstanceProfile: !Ref 'InstanceProfile'
      EbsOptimized: 'false'
      SecurityGroups:
        - !Ref 'WebServerSecurityGroup'
      InstanceType: !Ref 'WebServerInstanceType'
      KeyName: !Ref 'KeyName'
      AssociatePublicIpAddress: 'false'
      UserData: !Base64
        Fn::Join:
          - ''
          - - "#!/bin/bash -xe\n"
            - "exec > >(tee /var/log/user-data.log) 2>&1 \n"
            - "export DEBIAN_FRONTEND=noninteractive\n"
            - "apt_get_install()\n"
            - "{\n"
            - DEBIAN_FRONTEND=noninteractive apt-get -y \n
            - -o DPkg::Options::=--force-confnew \n
            - "install $@\n"
            - "}\n"
            - "timedatectl set-timezone Europe/Stockholm \n"
            - "dpkg-reconfigure -f noninteractive tzdata \n"
            - "echo 'LANG=\"en_US.UTF-8\"'> /etc/default/locale\n"
            - "locale-gen en_US.UTF-8 en_GB.UTF-8 sv_SE.UTF-8 \n"
            - "dpkg-reconfigure --frontend=noninteractive locales \n"
            - "apt-get update\n"
            - "apt-get -y install apt-transport-https\n"
            - "apt-get update\n"
            - "apt-get -y dist-upgrade\n"
            - "apt-get -y install python-pip unattended-upgrades chrony\n"
            - "echo 'server 169.254.169.123 prefer iburst minpoll 4 maxpoll 4' >>\
              \ /etc/chrony/chrony.conf \n"
            - "sudo /etc/init.d/chrony restart\n"
            - "pip install https://s3.amazonaws.com/cloudformation-examples/aws-cfn-bootstrap-latest.tar.gz\n"
            - "cp /usr/local/init/ubuntu/cfn-hup /etc/init.d/cfn-hup \n"
            - "chmod +x /etc/init.d/cfn-hup \n"
            - "update-rc.d cfn-hup defaults \n "
            - "service cfn-hup start \n"
            - "# Install the sample application\n"
            - 'cfn-init -v '
            - '    --stack '
            - !Ref 'AWS::StackId'
            - '    --resource WebServerLaunchConfig '
            - '    --region '
            - !Ref 'AWS::Region'
            - "\n"
            - "ufw default allow outgoing\n"
            - "ufw default deny incoming\n"
            - "sudo /etc/init.d/ssh stop\n"
            - "sudo apt-get -y purge openssh-server\n"
            - "ufw allow 8443/tcp\n"
            - "ufw allow 53\n"
            - "ufw allow 123/udp\n"
            - "ufw enable\n"
            - "#ufw disable\n"
            - "ufw status verbose\n"
            - "echo 'Sysctl hardening'\n"
            - "echo 'kernel.core_uses_pid = 1' >> /etc/sysctl.conf \n"
            - "echo 'kernel.sysrq = 0' >> /etc/sysctl.conf \n"
            - "echo 'kernel.kptr_restrict = 2' >> /etc/sysctl.conf \n"
            - "echo 'net.ipv4.conf.all.rp_filter = 1' >> /etc/sysctl.conf \n"
            - "echo 'net.ipv4.conf.default = 1' >> /etc/sysctl.conf \n"
            - "echo 'net.ipv4.conf.all.accept_redirects = 0' >> /etc/sysctl.conf \n"
            - "echo 'net.ipv4.conf.default.accept_redirects = 0' >> /etc/sysctl.conf\
              \ \n"
            - "echo 'net.ipv4.conf.all.accept_redirects = 0' >> /etc/sysctl.conf \n"
            - "echo 'net.ipv4.conf.all.log_martians = 1' >> /etc/sysctl.conf \n"
            - "echo 'net.ipv4.conf.default.log_martians = 1' >> /etc/sysctl.conf \n"
            - "echo 'net.ipv4.conf.all.log_martians = 1' >> /etc/sysctl.conf \n"
            - "echo 'net.ipv4.conf.all.send_redirects = 0' >> /etc/sysctl.conf \n"
            - "echo 'net.ipv4.conf.default.accept_source_route = 0' >> /etc/sysctl.conf\
              \ \n"
            - "echo 'net.ipv4.tcp_syncookies = 1' >> /etc/sysctl.conf \n"
            - "echo 'net.ipv4.tcp_timestamps = 0' >> /etc/sysctl.conf \n"
            - "echo 'net.ipv6.conf.all.accept_redirects = 0' >> /etc/sysctl.conf \n"
            - "echo 'net.ipv6.conf.default.accept_redirects = 0' >> /etc/sysctl.conf\
              \ \n"
            - "sysctl -p\n"
            - "cp /etc/fail2ban/jail.conf /etc/fail2ban/jail.local\n"
            - "wget https://d1wk0tztpsntt1.cloudfront.net/linux/latest/install\n"
            - "sudo bash install\n"
            - "sudo snap install amazon-ssm-agent --classic\n"
            - "sudo systemctl start snap.amazon-ssm-agent.amazon-ssm-agent.service\n"
            - "sudo apt-get -y install curl python software-properties-common xz-utils\
              \ bzip2 gnupg wget graphviz\n"
            - "sudo wget -O /tmp/awslogs-agent-setup.py https://s3.amazonaws.com/aws-cloudwatch/downloads/latest/awslogs-agent-setup.py\n"
            - "sudo chmod 775 /tmp/awslogs-agent-setup.py\n"
            - "sudo mkdir -p /var/awslogs/etc/\n"
            - "sudo /tmp/awslogs-agent-setup.py -n -r eu-west-1 -c /etc/awslogs.conf\n"
            - "sudo apt-get -y install libwww-perl libdatetime-perl\n"
            - "wget https://aws-cloudwatch.s3.amazonaws.com/downloads/CloudWatchMonitoringScripts-1.2.1.zip\n"
            - "unzip CloudWatchMonitoringScripts-1.2.1.zip\n"
            - "rm CloudWatchMonitoringScripts-1.2.1.zip\n"
            - "sudo mv aws-scripts-mon /opt/aws-scripts-mon\n"
            - "sudo chmod a+x /opt/aws-scripts-mon/*\n"
            - "sudo chmod +x /etc/cron.d/cloudwatch-monitor*\n"
            - "sudo /etc/init.d/cron restart\n"
            - "# INSTALL OPEN JDK\n"
            - "wget https://github.com/AdoptOpenJDK/openjdk15-binaries/releases/download/jdk-15%2B36/OpenJDK15U-jdk_x64_linux_hotspot_15_36.tar.gz\n"
            - "tar xvfz OpenJDK15U-jdk_x64_linux_hotspot_15_36.tar.gz\n"
            - "sudo mv jdk-15+36 /usr/lib/jvm/jdk-15\n"
            - "rm OpenJDK15U-jdk_x64_linux_hotspot_15_36.tar.gz\n"
            - 'wget '
            - !Ref 'DebPackageUrl'
            - " -O cia-dist-deb.deb \n"
            - "dpkg -i --force all cia-dist-deb.deb \n"
            - "/etc/init.d/cia stop\n"
            - echo 'database.name=
            - !Ref 'DBName'
            - "'  >> /opt/cia/webapps/cia/WEB-INF/database.properties\n"
            - echo 'database.username=allhaildiscordia
            - "'  >> /opt/cia/webapps/cia/WEB-INF/database.properties\n"
            - echo 'database.password=legalizeit
            - "'  >> /opt/cia/webapps/cia/WEB-INF/database.properties\n"
            - echo 'database.aws.secret.arn=
            - !Ref 'RDSInstanceRotationSecret'
            - "'  >> /opt/cia/webapps/cia/WEB-INF/database.properties\n"
            - echo 'database.aws.secret=true
            - "'  >> /opt/cia/webapps/cia/WEB-INF/database.properties\n"
            - echo 'database.hostname=
            - !GetAtt 'Database.Endpoint.Address'
            - "'  >> /opt/cia/webapps/cia/WEB-INF/database.properties\n"
            - "sed -i -e 's_\">/cia<_\">/<_' /opt/cia/webapps/cia.xml\n"
            - "LOCAL_IP=$(curl http://169.254.169.254/latest/meta-data/local-ipv4)\n"
            - "HISTCONTROL=ignorespace\n"
            - "KEY_PWD=$(< /dev/urandom tr -dc A-Z-a-z-0-9 | head -c${1:-32};echo)\n"
            - "rm -rf /opt/cia/etc/keystore.p12\n"
            - '/usr/lib/jvm/jdk-14/bin/keytool -genkey -noprompt -deststoretype pkcs12
              -sigalg SHA256withRSA -validity 365 -keyalg RSA -keysize 4096 '
            - ' -alias jetty  -dname ''CN=$LOCAL_IP, OU=None, O=None, L=None, S=None,
              C=SE'' -keystore /opt/cia/etc/keystore.p12 '
            - " -storepass $KEY_PWD -keypass $KEY_PWD\n"
            - "chown cia:cia /opt/cia/etc/keystore.p12\n"
            - "chmod 700 /opt/cia/etc/keystore.p12\n"
            - " sed -i -e 's_jetty.sslContext.keyManagerPassword=changeit_jetty.sslContext.keyManagerPassword='$KEY_PWD'_'\
              \ /opt/cia/start.ini\n"
            - " sed -i -e 's_jetty.sslContext.keyStorePassword=changeit_jetty.sslContext.keyStorePassword='$KEY_PWD'_'\
              \ /opt/cia/start.ini\n"
            - "TOTAL_MEM_KB=$(awk '/MemTotal:/ { print $2 }' /proc/meminfo)\n"
            - "let JAVAMEMSIZE=$TOTAL_MEM_KB-3046*1024\n"
            - "sed -i -e 's_4096m_'$JAVAMEMSIZE'k_' /opt/cia/start.ini\n"
            - '# sed -i -e ''s/# -DUSE_LOG_APPENDER='
            - !Ref 'WebServerAppLogAppender'
            - / -DUSE_LOG_APPENDER=
            - !Ref 'WebServerAppLogAppender'
            - "/' /opt/cia/start.ini\n"
            - sed -i -e 's/# -Djavamelody.cloudwatch-namespace=Hack23
            - / -Djavamelody.cloudwatch-namespace=Hack23
            - "/' /opt/cia/start.ini\n"
            - "wget https://s3.amazonaws.com/rds-downloads/rds-combined-ca-bundle.pem\n"
            - "mkdir /opt/cia/.postgresql\n"
            - "cp rds-combined-ca-bundle.pem /opt/cia/.postgresql/root.crt\n"
            - "chown -R cia:cia /opt/cia/.postgresql\n"
            - "chmod -R 700 /opt/cia/.postgresql\n"
            - "/usr/lib/jvm/jdk-14/bin/keytool -import -keystore /etc/ssl/certs/java/cacerts\
              \ -file rds-combined-ca-bundle.pem -storepass 'changeit' -noprompt -alias\
              \ aws-rds-2016\n"
            - "/etc/init.d/cia stop\n"
            - "/etc/init.d/cia start\n"
            - "update-rc.d cia defaults\n"
            - "# TODO setup  cron jobs for security auditing, intrusion detection,\
              \ system hardening#\n"
            - "sudo apt-get -y install lsb-invalid-mta\n"
            - "sudo apt-get -y install acct auditd audispd-plugins\n"
            - "sudo apt-get -y install aide rkhunter chkrootkit lynis\n"
            - "sudo chkrootkit\n"
            - "#sudo rkhunter --update --cronjob\n"
            - "#sudo rkhunter --propupd --cronjob\n"
            - "#sudo rkhunter --cronjob --check --quiet\n"
            - "sudo lynis -c --cronjob\n"
            - "sudo aideinit\n"
            - "sudo cp /var/lib/aide/aide.db.new /var/lib/aide/aide.db \n"
            - "sudo update-aide.conf\n"
            - "sudo cp /var/lib/aide/aide.conf.autogenerated /etc/aide/aide.conf\n"
            - "# Baseline processes open sockets #\n"
            - "sudo apt-get -y install procinfo\n"
            - "sudo socklist\n"
            - "# Signal completion\n"
            - 'cfn-signal -e $? '
            - '    --stack '
            - !Ref 'AWS::StackId'
            - '    --resource WebServerFleet '
            - '    --region '
            - !Ref 'AWS::Region'
            - "\n"